[target.x86_64-pc-windows-msvc]
# LLD linker
#
# You may need to install it:
#
# ```
# cargo install -f cargo-binutils
# rustup component add llvm-tools
# ```
linker = "rust-lld.exe"
rustdocflags = ["-Clinker=rust-lld.exe"]
rustflags = [
  # Nightly
  # "-Zshare-generics=n", # This needs to be off if you use dynamic linking on Windows.
  # "-Zthreads=0",
]

[target.x86_64-unknown-linux-gnu]
linker = "clang"
rustflags = [
  # LLD linker
  #
  # You may need to install it:
  #
  # - Ubuntu: `sudo apt-get install lld clang`
  # - Fedora: `sudo dnf install lld clang`
  # - Arch: `sudo pacman -S lld clang`
  #"-Clink-arg=-fuse-ld=lld",

  # Mold linker
  #
  # You may need to install it:
  #
  # - Ubuntu: `sudo apt-get install mold clang`
  # - Fedora: `sudo dnf install mold clang`
  # - Arch: `sudo pacman -S mold clang`
  "-Clink-arg=-fuse-ld=mold",

  # Nightly
  # "-Zshare-generics=y",
  # "-Zthreads=0",
]
# Some systems may experience linker performance issues when running doc tests.
# See https://github.com/bevyengine/bevy/issues/12207 for details.
rustdocflags = [
  # LLD linker
  #"-Clink-arg=-fuse-ld=lld",

  # Mold linker
   "-Clink-arg=-fuse-ld=mold",
]

# Optional: Uncommenting the following improves compile times, but reduces the amount of debug info to 'line number tables only'.
# In most cases the gains are negligible, but if you are on macOS and have slow compile times you should see significant gains.
# [profile.dev]
# debug = 1

# This enables you to run the CI tool using `cargo ci`.
[alias]
ci = "run --package ci --"